plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.green'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

//라이브러리 추가
dependencies {
    implementation 'io.jsonwebtoken:jjwt:0.12.6'//JsonWebToken
    runtimeOnly 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16' //log4jdbc, persistence Query문/ 결과값 확인
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'// swagger
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security' //security 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation' //유효성검사 추가
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    compileOnly 'org.projectlombok:lombok' //애는 안붙여도 최신버젼 들어옴. 나머지는 안붙이면 3.3.6
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor' //yml의 내용을 객체로 만들수있음
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test:6.4.2'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}
// jar:애플리케이션 압축파일
// compileOnly 컴파일할 때만 쓰는 것, 개발할 때만 필요하다.  compile: computer가 이해할 수 있도록 transfer하는 거
// 인터프린터: 실행하면서 해석해주는거. compile는 껐다켜야하고 얘는 새로고침하면 됨. 대표적으로 PHP
// developmentOnly 개발할 때만 쓰는거. 컴파일 할 때도 안씀
// implementation 컴파일, 배포 둘다 쓰는거
// runtimeOnly: 실행할때만 쓰임, jar 파일에 포함안됨 컴파일할때 안씀

tasks.named('test') {
    useJUnitPlatform()
}
